// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_PRISMA_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Album {
    id          String   @id
    name        String
    artist      String
    releaseDate String
    image       String?
    tracksCount Int
    genres      String[]
    popularity  Int
    spotifyUrl  String?

    usersListenedTo User[]
    Review          Review[]

    @@index([name])
}

model Review {
    id        String   @id @default(cuid())
    message   String
    rating    Int
    createdAt DateTime @default(now())

    album   Album  @relation(fields: [albumId], references: [id])
    albumId String

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?

    listenedTo Album[]
    reviews    Review[]

    accounts Account[]
    sessions Session[]

    followedBy User[] @relation("UserFollows")
    following  User[] @relation("UserFollows")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
